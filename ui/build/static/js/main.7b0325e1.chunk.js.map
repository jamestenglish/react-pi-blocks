{"version":3,"sources":["customBlocks/custom_Blocks.js","customBlocks/required/board_setup_blocks.js","helpers/isNullOrEmpty.js","helpers/pinVariableGenerators.js","customBlocks/led/led.js","customBlocks/button/button.js","customBlocks/constants/gpioOptions.js","customBlocks/pins/pins.js","toolbox/toolboxCategories.js","BlocklyToolbox.js","socket.js","Terminal.js","ProjectManager.js","App.js","index.js"],"names":["Blockly","Blocks","init","this","appendDummyInput","appendField","FieldTextInput","appendStatementInput","setCheck","setInputsInline","setColour","setTooltip","setHelpUrl","JavaScript","block","getFieldValue","statementToCode","appendValueInput","setPreviousStatement","valueToCode","Javascript","ORDER_ATOMIC","statementsMain","isNullOrEmpty","input","undefined","console","log","jsBlockly","createGenerators","inputType","color","pinVariableBlockSetGenerator","useText","setNextStatement","pinVariableCodeSetGenerator","constructorName","pinValue","inputTypeValue","variableName","variableDB_","getName","Variables","NAME_TYPE","pinVariableBlockGetGenerator","FieldVariable","setOutput","pinVariableCodeGetGenerator","commandBlockGenerator","dropDownArray","validatorFunctionName","validatorFunc","tmpValidatorFunc","FieldDropdown","commandCodeGenerator","inputBlock","command","isAdditionaParamInput","fieldValue","additionalParamCommands","i","length","obj","blink","dropDownItem","beforeText","afterText","fieldBlock","FieldNumber","fieldName","codeGenerator","arg","additionalParamsArray","Object","keys","reduce","acc","key","mutationToDom","container","document","createElement","setAttribute","domToMutation","xmlElement","additionalParam","getAttribute","updateShape_","validate","newValue","getSourceBlock","hasAdditionalParam","inputExists","getInput","additionalParamMeta","removeInput","buttonCommand","gpioOptions","prev","curr","forEach","option","name","value","blockName","replaceAll","toolboxCategories","custom","colour","blocks","type","map","onImportXmlError","e","group","error","groupEnd","useStyles","makeStyles","theme","root","margin","spacing","BlocklyToolbox","toolboxState","handleToolboxChange","xml","currWorkspace","initialized","createVariable","createVariableButtonHandler","classes","className","Button","variant","size","onClick","initialXml","wrapperDivClassName","workspaceConfiguration","grid","snap","workspaceDidChange","workspace","newXml","Xml","domToText","workspaceToDom","code","workspaceToCode","rearrangedCode","prettierCode","prettier","format","parser","plugins","parserBabel","err","ENDPOINT","window","location","hostname","socket","socketio","connect","reconnect","SocketContext","React","createContext","ConfirmationDialogRaw","props","onClose","open","other","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle","id","DialogContent","dividers","DialogActions","autoFocus","GreenButton","withStyles","palette","getContrastText","success","main","backgroundColor","dark","Terminal","isProjectRunning","projectName","projectCode","useState","response","setResponse","setValue","messagesEndRef","useRef","setOpen","useContext","useEffect","current","scrollIntoView","behavior","scrollToBottom","on","data","buf","String","fromCharCode","apply","Uint8Array","buttonBar","width","position","terminalContainer","paddingTop","shutdown","float","startIcon","disabled","emit","setTimeout","keepMounted","dangerouslySetInnerHTML","__html","ref","onSubmit","event","preventDefault","onChange","target","listRoot","background","paper","marginLeft","marginRight","flexGrow","formRoot","ProjectManager","handleProjectNameSelection","files","setFiles","inputValue","setInputValue","selectedIndex","setSelectedIndex","fileList","file","index","ListItem","button","selected","handleListItemClick","ListItemIcon","ListItemText","primary","Grid","item","xs","CircularProgress","List","component","aria-label","subheader","ListSubheader","noValidate","autoComplete","TextField","label","trim","TabPanel","children","role","hidden","App","setToolboxState","tabValue","setTabValue","setProjectName","setIsProjectRunning","useCallback","projectNameToUpdate","contents","fileName","status","Provider","AppBar","Tabs","Tab","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b0325e1.chunk.js","sourcesContent":["/* eslint-disable prefer-template */\n/* eslint-disable camelcase */\n/* eslint-disable object-shorthand */\n/* eslint-disable func-names */\n/* eslint-disable dot-notation */\nimport Blockly from 'blockly';\n// import jsBlockly from 'blockly/javascript';\nimport 'blockly/javascript';\n\n// const init = () => {\nBlockly.Blocks['new_boundary_function'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\n      new Blockly.FieldTextInput('Boundary Function Name'),\n      'Name'\n    );\n    this.appendStatementInput('Content').setCheck(null);\n    this.setInputsInline(true);\n    this.setColour(315);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  },\n};\n\nBlockly.JavaScript['new_boundary_function'] = function (block) {\n  const text_name = block.getFieldValue('Name');\n  const statements_content = Blockly.JavaScript.statementToCode(\n    block,\n    'Content'\n  );\n  // TODO: Assemble Python into code variable.\n  const code =\n    'def ' + text_name + '(_object,**kwargs):\\n' + statements_content + '\\n';\n  return code;\n};\n\nBlockly.Blocks['return'] = {\n  init: function () {\n    this.appendValueInput('NAME').setCheck(null).appendField('return');\n    this.setInputsInline(false);\n    this.setPreviousStatement(true, null);\n    this.setColour(330);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  },\n};\n\nBlockly.JavaScript['return'] = function (block) {\n  const value_name = Blockly.JavaScript.valueToCode(\n    block,\n    'NAME',\n    Blockly.Javascript.ORDER_ATOMIC\n  );\n  // TODO: Assemble Python into code variable.\n  const code = 'return ' + value_name + '\\n';\n  return code;\n};\n// };\n\n// const initBlocks = () => {\n//   init();\n//   console.log({ Blockly, jsBlockly });\n// };\n// export default initBlocks;\n","/* eslint-disable object-shorthand */\n/* eslint-disable func-names */\n/* eslint-disable dot-notation */\nimport Blockly from 'blockly';\nimport 'blockly/javascript';\n\nBlockly.Blocks['board_setup'] = {\n  init: function () {\n    this.appendDummyInput().appendField('Start');\n    this.setHelpUrl('');\n    this.setColour(50);\n    this.appendStatementInput('MAIN').setCheck(null);\n  },\n};\n\nBlockly.JavaScript['board_setup'] = function (block) {\n  const statementsMain = Blockly.JavaScript.statementToCode(block, 'MAIN');\n  const code = `\n  board.on(\"ready\", () => {\n    ${statementsMain}\n  });\n  `;\n  return code;\n};\n","const isNullOrEmpty = (input) =>\n  input === null || input === undefined || input === '';\n\nexport default isNullOrEmpty;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable func-names */\n/* eslint-disable arrow-body-style */\nimport Blockly from 'blockly';\nimport jsBlockly from 'blockly/javascript';\n\nimport isNullOrEmpty from './isNullOrEmpty';\n\nconst createGenerators = ({ inputType, color = 230 }) => {\n  const pinVariableBlockSetGenerator = ({ useText }) => {\n    return function () {\n      this.appendDummyInput().appendField('Make Pin');\n      this.appendValueInput('PIN').setCheck('PIN');\n      this.appendDummyInput().appendField(useText);\n      this.appendValueInput(inputType).setCheck(inputType);\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(color);\n      this.setTooltip('');\n      this.setHelpUrl('');\n    };\n  };\n\n  const pinVariableCodeSetGenerator = ({ constructorName }) => {\n    return function (block) {\n      const pinValue = Blockly.JavaScript.valueToCode(\n        block,\n        'PIN',\n        Blockly.JavaScript.ORDER_ATOMIC\n      );\n      const inputTypeValue = Blockly.JavaScript.valueToCode(\n        block,\n        inputType,\n        Blockly.JavaScript.ORDER_ATOMIC\n      );\n\n      if (isNullOrEmpty(pinValue) || isNullOrEmpty(inputTypeValue)) {\n        return '';\n      }\n\n      const variableName = Blockly.JavaScript.variableDB_.getName(\n        inputTypeValue,\n        Blockly.Variables.NAME_TYPE\n      );\n\n      const code = `${variableName} = new ${constructorName}(${pinValue});\\n`;\n      return code;\n    };\n  };\n\n  const pinVariableBlockGetGenerator = ({ useText }) => {\n    return function () {\n      this.appendDummyInput().appendField(\n        new Blockly.FieldVariable(useText, null, [inputType], inputType),\n        inputType\n      );\n      this.setOutput(true, inputType);\n      this.setColour(color);\n    };\n  };\n\n  const pinVariableCodeGetGenerator = () => {\n    return function (block) {\n      const variableName = Blockly.JavaScript.variableDB_.getName(\n        block.getFieldValue(inputType),\n        Blockly.Variables.NAME_TYPE\n      );\n      const code = variableName;\n      return [code, Blockly.JavaScript.ORDER_ATOMIC];\n    };\n  };\n\n  const commandBlockGenerator = ({\n    dropDownArray,\n    validatorFunctionName = null,\n  }) => {\n    return function () {\n      let validatorFunc = null;\n      if (validatorFunctionName != null) {\n        const tmpValidatorFunc = this[validatorFunctionName];\n        if (tmpValidatorFunc) {\n          validatorFunc = tmpValidatorFunc;\n        }\n      }\n      this.appendValueInput(inputType).setCheck(inputType).appendField('Make');\n      this.appendDummyInput().appendField(\n        new Blockly.FieldDropdown(dropDownArray, validatorFunc),\n        `${inputType}_COMMAND`\n      );\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(color);\n      this.setTooltip('');\n      this.setHelpUrl('');\n    };\n  };\n\n  const commandCodeGenerator = () => {\n    return function (block) {\n      const inputBlock = Blockly.JavaScript.valueToCode(\n        block,\n        inputType,\n        Blockly.JavaScript.ORDER_ATOMIC\n      );\n      if (isNullOrEmpty(inputBlock)) {\n        return '';\n      }\n      const variableName = Blockly.JavaScript.variableDB_.getName(\n        inputBlock,\n        Blockly.Variables.NAME_TYPE\n      );\n      const command = block.getFieldValue(`${inputType}_COMMAND`);\n      const code = `${variableName}${command};\\n`;\n      return code;\n    };\n  };\n\n  return {\n    pinVariableBlockSetGenerator,\n    pinVariableCodeSetGenerator,\n    pinVariableBlockGetGenerator,\n    pinVariableCodeGetGenerator,\n    commandBlockGenerator,\n    commandCodeGenerator,\n  };\n};\n\nconst initBlocks = () => {\n  console.log({ Blockly, jsBlockly });\n};\ninitBlocks();\n\nexport { initBlocks };\n\nexport default createGenerators;\n","/* eslint-disable object-shorthand */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable func-names */\n/* eslint-disable dot-notation */\nimport Blockly from 'blockly';\nimport 'blockly/javascript';\nimport createGenerators from '../../helpers/pinVariableGenerators';\nimport isNullOrEmpty from '../../helpers/isNullOrEmpty';\n\nconst isAdditionaParamInput = (fieldValue, additionalParamCommands) => {\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < additionalParamCommands.length; i++) {\n    if (fieldValue === additionalParamCommands[i][1]) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst getAdditionParamsArray = (obj) => {\n  const additionalParamsArray = Object.keys(obj).reduce(\n    (acc, key) => [...acc, [obj[key].dropDownItem, key]],\n    []\n  );\n  return additionalParamsArray;\n};\n\nconst {\n  pinVariableBlockSetGenerator,\n  pinVariableCodeSetGenerator,\n  pinVariableBlockGetGenerator,\n  pinVariableCodeGetGenerator,\n  commandBlockGenerator,\n  commandCodeGenerator,\n} = createGenerators({ inputType: 'LED', color: '#6CB0F2' });\n\nBlockly.Blocks['set_led'] = {\n  init: pinVariableBlockSetGenerator({\n    useText: 'be used for LED named',\n  }),\n};\n\nBlockly.JavaScript['set_led'] = pinVariableCodeSetGenerator({\n  constructorName: 'five.Led',\n});\n\nBlockly.Blocks['get_led'] = {\n  init: pinVariableBlockGetGenerator({ useText: 'LED Name' }),\n};\n\nBlockly.JavaScript['get_led'] = pinVariableCodeGetGenerator();\n\nconst standardCommands = [\n  ['Turn On', '.on()'],\n  ['Turn Off', '.off()'],\n  ['Start Pulsing', '.pulse()'],\n  ['Stop Pulsing', '.stop()'],\n  ['Fade In', '.fadeIn()'],\n  ['Fade Out', '.fadeOut()'],\n];\n\nconst additionalParamCommands = {\n  blink: {\n    dropDownItem: 'Blink',\n    beforeText: 'every',\n    afterText: 'milliseconds',\n    fieldBlock: new Blockly.FieldNumber(500, 0),\n    fieldName: 'BLINK_TIME_IN_MS',\n    codeGenerator: function (block) {\n      const inputBlock = Blockly.JavaScript.valueToCode(\n        block,\n        'LED',\n        Blockly.JavaScript.ORDER_ATOMIC\n      );\n      if (isNullOrEmpty(inputBlock)) {\n        return '';\n      }\n      const variableName = Blockly.JavaScript.variableDB_.getName(\n        inputBlock,\n        Blockly.Variables.NAME_TYPE\n      );\n      const command = block.getFieldValue('LED_COMMAND');\n      const arg = block.getFieldValue('BLINK_TIME_IN_MS');\n      const code = `${variableName}.${command}(${arg});\\n`;\n      return code;\n    },\n  },\n};\n\nconst additionalParamsArray = getAdditionParamsArray(additionalParamCommands);\n\nBlockly.Blocks['led_on_off'] = {\n  init: commandBlockGenerator({\n    dropDownArray: [...standardCommands, ...additionalParamsArray],\n    validatorFunctionName: 'validate',\n  }),\n  mutationToDom: function () {\n    const container = document.createElement('mutation');\n    const fieldValue = this.getFieldValue('LED_COMMAND');\n\n    const hasAdditionalParam = isAdditionaParamInput(\n      fieldValue,\n      additionalParamsArray\n    );\n\n    if (hasAdditionalParam) {\n      container.setAttribute('additionalParam', fieldValue);\n    } else {\n      container.setAttribute('additionalParam', '');\n    }\n    return container;\n  },\n  domToMutation: function (xmlElement) {\n    const additionalParam = xmlElement.getAttribute('additionalParam');\n    this.updateShape_(additionalParam);\n  },\n\n  validate: function (newValue) {\n    this.getSourceBlock().updateShape_(newValue);\n    return newValue;\n  },\n  updateShape_: function (additionalParam) {\n    const hasAdditionalParam = isAdditionaParamInput(\n      additionalParam,\n      additionalParamsArray\n    );\n    const inputExists = this.getInput('ADDITIONAL_PARAM');\n    if (hasAdditionalParam) {\n      if (!inputExists) {\n        const additionalParamMeta = additionalParamCommands[additionalParam];\n        const {\n          beforeText,\n          fieldBlock,\n          fieldName,\n          afterText,\n        } = additionalParamMeta;\n        this.appendDummyInput('ADDITIONAL_PARAM')\n          .appendField(beforeText)\n          .appendField(fieldBlock, fieldName)\n          .appendField(afterText);\n      }\n    } else if (inputExists) {\n      this.removeInput('ADDITIONAL_PARAM');\n    }\n  },\n};\n\nBlockly.JavaScript['led_on_off'] = function (block) {\n  const fieldValue = block.getFieldValue('LED_COMMAND');\n\n  const hasAdditionalParam = isAdditionaParamInput(\n    fieldValue,\n    additionalParamsArray\n  );\n  if (hasAdditionalParam) {\n    return additionalParamCommands[fieldValue].codeGenerator(block);\n  }\n  return commandCodeGenerator()(block);\n};\n","/* eslint-disable prefer-template */\n/* eslint-disable camelcase */\n/* eslint-disable object-shorthand */\n/* eslint-disable func-names */\n/* eslint-disable dot-notation */\nimport Blockly from 'blockly';\nimport 'blockly/javascript';\n\nimport createGenerators from '../../helpers/pinVariableGenerators';\n\nconst {\n  pinVariableBlockSetGenerator,\n  pinVariableCodeSetGenerator,\n  pinVariableBlockGetGenerator,\n  pinVariableCodeGetGenerator,\n} = createGenerators({ inputType: 'BUTTON', color: '#749DC4' });\n\nBlockly.Blocks['set_button'] = {\n  init: pinVariableBlockSetGenerator({\n    useText: 'be used for LED named',\n  }),\n};\n\nBlockly.JavaScript['set_button'] = pinVariableCodeSetGenerator({\n  constructorName: 'five.Button',\n});\n\nBlockly.Blocks['get_button'] = {\n  init: pinVariableBlockGetGenerator({\n    useText: 'Button Name',\n  }),\n};\n\nBlockly.JavaScript['get_button'] = pinVariableCodeGetGenerator();\n\nBlockly.Blocks['button_on_off'] = {\n  init: function () {\n    this.appendValueInput('BUTTON').setCheck('BUTTON').appendField('When');\n    this.appendDummyInput()\n      .appendField('is')\n      .appendField(\n        new Blockly.FieldDropdown(\n          [\n            ['Down', 'down'],\n            ['Up', 'up'],\n            ['Hold', 'hold'],\n          ]\n          // this.validate\n        ),\n        'BUTTON_COMMAND'\n      );\n    this.appendStatementInput('BUTTON_STMT').setCheck(null);\n\n    this.setColour('#6549DA');\n    this.setInputsInline(true);\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  },\n  // mutationToDom: function () {\n  //   var container = document.createElement(\"mutation\");\n  //   var holdInput = this.getFieldValue(\"BUTTON_COMMAND\") === \"hold\";\n  //   container.setAttribute(\"hold_input\", holdInput);\n  //   return container;\n  // },\n  // domToMutation: function (xmlElement) {\n  //   var holdInput = xmlElement.getAttribute(\"hold_input\") === \"true\";\n  //   this.updateShape_(holdInput);\n  // },\n\n  // validate: function (newValue) {\n  //   const holdInput = newValue === \"hold\";\n  //   this.getSourceBlock().updateShape_(holdInput);\n  //   return newValue;\n  // },\n  // updateShape_: function (holdInput) {\n\n  //   const inputExists = this.getInput(\"WAIT_TIME\");\n  //   if (holdInput) {\n  //     if (!inputExists) {\n  //       this.appendDummyInput(\"WAIT_TIME\")\n  //         .appendField(\"for\")\n  //         .appendField(new Blockly.FieldNumber(500, 0), \"WAIT_TIME_IN_MS\")\n  //         .appendField(\"milliseconds\");\n  //     }\n  //   } else if (inputExists) {\n  //     this.removeInput(\"WAIT_TIME\");\n  //   }\n  // },\n};\n\nBlockly.JavaScript['button_on_off'] = function (block) {\n  const buttonCommand = block.getFieldValue('BUTTON_COMMAND');\n\n  const statementsMain = Blockly.JavaScript.statementToCode(\n    block,\n    'BUTTON_STMT'\n  );\n  const code = `\n  button.on(\"${buttonCommand}\", () => {\n    ${statementsMain}\n  });\n  `;\n\n  return code;\n};\n","const gpioOptions = [\n  ['#4', 'P1-7'],\n  ['#5', 'P1-29'],\n  ['#6', 'P1-31'],\n  ['#12', 'P1-32'],\n  ['#13', 'P1-33'],\n  ['#16', 'P1-36'],\n  ['#17', 'P1-11'],\n  ['#18', 'P1-12'],\n  ['#19', 'P1-35'],\n  ['#20', 'P1-38'],\n  ['#21', 'P1-40'],\n  ['#23', 'P1-16'],\n  ['#24', 'P1-18'],\n  ['#25', 'P1-22'],\n  ['#26', 'P1-37'],\n  ['#27', 'P1-13'],\n];\n\nconst gpioMap = gpioOptions.reduce((prev, curr) => {\n  return {\n    ...prev,\n    [curr[0]]: curr[1],\n  };\n}, {});\n\nexport default gpioOptions;\n\nexport { gpioMap };\n","/* eslint-disable dot-notation */\n/* eslint-disable func-names, object-shorthand */\nimport Blockly from 'blockly';\nimport 'blockly/javascript';\n\nimport gpioOptions from '../constants/gpioOptions';\n\ngpioOptions.forEach((option) => {\n  const [name, value] = option;\n  // console.log({ name });\n  const blockName = `pin_${name.replaceAll('#', '')}`;\n  // console.log({ blockName });\n\n  Blockly.Blocks[blockName] = {\n    init: function () {\n      this.appendDummyInput().appendField(`Pin ${name}`);\n      this.setOutput(true, 'PIN');\n      this.setColour('#9CDEF6');\n      this.setTooltip('');\n      this.setHelpUrl('');\n    },\n  };\n\n  Blockly.JavaScript[blockName] = function () {\n    const code = `'${value}'`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n  };\n});\n\nBlockly.Blocks['pin_a'] = {\n  init: function () {\n    this.appendDummyInput().appendField('Pin');\n    this.setOutput(true, 'PIN');\n    this.setColour(230);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  },\n};\n\nBlockly.JavaScript['pin_a'] = function () {\n  const code = `'pin_a'`;\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n","import gpioOptions from '../customBlocks/constants/gpioOptions';\n\nconst pinBlocks = gpioOptions.map((option) => {\n  const [name] = option;\n  const blockName = `pin_${name.replaceAll('#', '')}`;\n  return {\n    type: blockName,\n  };\n});\n\nconst toolboxCategories = [\n  {\n    name: 'Variables',\n    custom: 'VARIABLE',\n    colour: '#a55b80',\n  },\n  {\n    name: 'Logic',\n    colour: '#5C81A6',\n    blocks: [\n      { type: 'controls_if' },\n      { type: 'logic_compare' },\n      { type: 'logic_operation' },\n      { type: 'logic_negate' },\n      { type: 'logic_boolean' },\n      { type: 'logic_null' },\n      { type: 'logic_ternary' },\n    ],\n  },\n  {\n    name: 'Math',\n    colour: '#5CA65C',\n    blocks: [\n      { type: 'math_number' },\n\n      { type: 'math_arithmetic' },\n\n      { type: 'math_single' },\n\n      { type: 'math_trig' },\n\n      { type: 'math_constant' },\n      { type: 'math_number_property' },\n\n      { type: 'math_round' },\n\n      { type: 'math_on_list' },\n\n      { type: 'math_modulo' },\n\n      { type: 'math_constrain' },\n\n      { type: 'math_random_int' },\n\n      { type: 'math_random_float' },\n    ],\n  },\n\n  {\n    name: 'Text',\n    colour: '#5CA65C',\n    blocks: [\n      {\n        type: 'text',\n      },\n      {\n        type: 'text_join',\n      },\n      {\n        type: 'text_append',\n      },\n      {\n        type: 'text_length',\n      },\n      {\n        type: 'text_isEmpty',\n      },\n      {\n        type: 'text_indexOf',\n      },\n      {\n        type: 'text_charAt',\n      },\n      {\n        type: 'text_getSubstring',\n      },\n      {\n        type: 'text_changeCase',\n      },\n      {\n        type: 'text_trim',\n      },\n    ],\n  },\n  {\n    name: 'Loops',\n    colour: '#5ba55b',\n    blocks: [\n      { type: 'controls_repeat_ext' },\n      { type: 'controls_whileUntil' },\n      { type: 'controls_for' },\n      { type: 'controls_forEach' },\n      { type: 'controls_flow_statements' },\n    ],\n  },\n  {\n    name: 'Required',\n    colour: '#5CA699',\n    blocks: [\n      {\n        type: 'board_setup',\n      },\n    ],\n  },\n  {\n    name: 'Pins',\n    colour: '#9CDEF6',\n    blocks: pinBlocks,\n  },\n\n  {\n    name: 'LED',\n    colour: '#6CB0F2',\n    blocks: [\n      {\n        type: 'set_led',\n      },\n      {\n        type: 'get_led',\n      },\n      {\n        type: 'led_on_off',\n      },\n    ],\n  },\n  {\n    name: 'Button',\n    colour: '#6549DA',\n    blocks: [\n      {\n        type: 'set_button',\n      },\n      {\n        type: 'get_button',\n      },\n      {\n        type: 'button_on_off',\n      },\n    ],\n  },\n  {\n    name: 'Lists',\n    colour: '#745ba5',\n    blocks: [\n      { type: 'lists_create_with' },\n      { type: 'lists_create_with' },\n      { type: 'lists_repeat' },\n      { type: 'lists_length' },\n      { type: 'lists_isEmpty' },\n      { type: 'lists_indexOf' },\n      { type: 'lists_getIndex' },\n      { type: 'lists_setIndex' },\n      { type: 'lists_getSublist' },\n      { type: 'lists_split' },\n      { type: 'lists_sort' },\n    ],\n  },\n];\n\nexport default toolboxCategories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ReactBlockly from 'react-blockly';\nimport Blockly from 'blockly';\n\nimport prettier from 'prettier/standalone';\nimport parserBabel from 'prettier/parser-babel';\n\nimport toolboxCategories from './toolbox/toolboxCategories';\n\nconst onImportXmlError = (e) => {\n  console.group('xml error');\n  console.error(e);\n  console.groupEnd();\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst BlocklyToolbox = ({ toolboxState, handleToolboxChange }) => {\n  console.group('BlocklyToolbox');\n  const { xml } = toolboxState;\n  console.log({ xml });\n\n  let initialized = false;\n  let currWorkspace;\n\n  const createVariable = (type) => {\n    if (currWorkspace) {\n      Blockly.Variables.createVariableButtonHandler(currWorkspace, null, type);\n    }\n  };\n  function workspaceDidChange(workspace) {\n    currWorkspace = workspace;\n    if (!initialized && workspace) {\n      initialized = true;\n      console.group('initialization');\n      console.log('Initializing Workspace');\n      console.groupEnd();\n    }\n    const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\n    const rearrangedCode = `\n  const { RaspiIO } = require('raspi-io');\n  const five = require(\"johnny-five\");\n  const board = new five.Board({\n    io: new RaspiIO()\n  });\n\n  ${code}`;\n\n    let prettierCode = rearrangedCode;\n    try {\n      prettierCode = prettier.format(rearrangedCode, {\n        parser: 'babel',\n        plugins: [parserBabel],\n      });\n    } catch (err) {\n      console.group('Prettier Error');\n      console.error(err);\n      console.groupEnd();\n    }\n    if (xml !== newXml) {\n      console.group('xml changed');\n      console.log('setting state');\n      console.groupEnd();\n      handleToolboxChange({ code: prettierCode, xml: newXml });\n    }\n  }\n\n  const classes = useStyles();\n  console.groupEnd();\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => createVariable('LED')}\n        >\n          Create LED\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => createVariable('BUTTON')}\n        >\n          Create Button\n        </Button>\n      </div>\n      <ReactBlockly\n        toolboxCategories={toolboxCategories}\n        initialXml={xml}\n        wrapperDivClassName=\"fill-height\"\n        workspaceConfiguration={{\n          grid: {\n            spacing: 20,\n            length: 3,\n            colour: '#ccc',\n            snap: true,\n          },\n        }}\n        workspaceDidChange={workspaceDidChange}\n        onImportXmlError={onImportXmlError}\n      />\n    </>\n  );\n};\n\nBlocklyToolbox.propTypes = {\n  toolboxState: PropTypes.shape({\n    xml: PropTypes.string,\n    code: PropTypes.string,\n  }).isRequired,\n  handleToolboxChange: PropTypes.func.isRequired,\n};\nexport default BlocklyToolbox;\n","import React from 'react';\nimport socketio from 'socket.io-client';\n\nconst ENDPOINT = `${window.location.hostname}:8080`;\nconst socket = socketio.connect(ENDPOINT, { reconnect: true });\nconst SocketContext = React.createContext();\n\nexport { socket, SocketContext };\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { SocketContext } from './socket';\n\nconst ConfirmationDialogRaw = (props) => {\n  const { onClose, open, ...other } = props;\n\n  const handleCancel = () => {\n    onClose(false);\n  };\n\n  const handleOk = () => {\n    onClose(true);\n  };\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Power Off?</DialogTitle>\n      <DialogContent dividers>\n        Are you sure you want to power off?\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          No\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst GreenButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(theme.palette.success.main),\n    backgroundColor: theme.palette.success.main,\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark,\n    },\n  },\n}))(Button);\n\nconst Terminal = ({ isProjectRunning, projectName, projectCode }) => {\n  console.group('Terminal');\n  const [response, setResponse] = useState('');\n  const [value, setValue] = useState('');\n  const messagesEndRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const socket = useContext(SocketContext);\n  console.log({ socket });\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleClose = (newValue) => {\n    console.group('handleClose');\n    setOpen(false);\n\n    if (newValue) {\n      console.log('emitting powerOff');\n      socket.emit('powerOff');\n    }\n    console.groupEnd();\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [response]);\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Client has connected to the server!');\n    });\n    socket.on('message', (data) => {\n      console.group('on message');\n      const buf = String.fromCharCode.apply(null, new Uint8Array(data));\n      console.log({ buf });\n      setResponse((prev) => `${prev}<p class=\"terminal\">${buf}</p>`);\n      console.groupEnd();\n    });\n    socket.on('exit', (data) => {\n      console.group('on exit');\n      console.log({ data });\n      console.groupEnd();\n      setResponse((prev) => `${prev}<p class=\"terminal\">${data}</p>`);\n    });\n  }, [socket]);\n\n  const handleSubmit = (event) => {\n    console.group('handleSubmit');\n    console.log({ value });\n    console.log('emitting');\n    socket.emit('message', value);\n    // socket.send(value);\n\n    setValue('');\n    event.preventDefault();\n    console.groupEnd();\n  };\n\n  const handleRun = () => {\n    console.group('handleRun');\n    console.log('emitting');\n\n    socket.emit('copyProject', { projectCode });\n\n    setTimeout(() => {\n      const runProgramCmd =\n        'sudo node /home/pi/Development/johnny-five/index.js';\n\n      socket.emit('message', runProgramCmd);\n      socket.emit('projectStarted');\n    }, 1000);\n\n    console.groupEnd();\n  };\n\n  const handleStop = () => {\n    console.group('handleStop');\n    console.log('emitting');\n\n    const exitProgramCmd = `.exit`;\n    socket.emit('message', exitProgramCmd);\n    setTimeout(() => {\n      socket.emit('stopProject');\n    }, 500);\n\n    console.groupEnd();\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    buttonBar: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n      width: '100%',\n      position: 'fixed',\n    },\n    terminalContainer: {\n      paddingTop: '46px',\n    },\n    shutdown: {\n      float: 'right',\n    },\n  }));\n\n  const classes = useStyles();\n  console.groupEnd();\n\n  return (\n    <>\n      <div className={classes.buttonBar}>\n        <GreenButton\n          variant=\"contained\"\n          size=\"small\"\n          startIcon={<PlayCircleOutlineIcon />}\n          disabled={\n            isProjectRunning || projectName == null || projectCode === ''\n          }\n          onClick={handleRun}\n        >\n          Play\n        </GreenButton>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<PanToolIcon />}\n          disabled={!isProjectRunning}\n          onClick={handleStop}\n        >\n          Stop\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          className={classes.shutdown}\n          startIcon={<PowerSettingsNewIcon />}\n          disabled={isProjectRunning}\n          onClick={() => setOpen(true)}\n        >\n          Turn off\n        </Button>\n        <ConfirmationDialogRaw\n          id=\"power-off-dialog\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n        />\n      </div>\n      <div className={`terminal ${classes.terminalContainer}`}>\n        <div>\n          {/* eslint-disable react/self-closing-comp, react/no-danger */}\n          <div\n            className=\"terminal\"\n            dangerouslySetInnerHTML={{ __html: response }}\n          ></div>\n          {/* eslint-enable */}\n          <div ref={messagesEndRef} />\n        </div>\n        <form className=\"terminal\" onSubmit={handleSubmit}>\n          &gt;{' '}\n          <input\n            className=\"terminal\"\n            value={value}\n            onChange={(event) => setValue(event.target.value)}\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nTerminal.propTypes = {\n  isProjectRunning: PropTypes.bool.isRequired,\n  projectName: PropTypes.string,\n  projectCode: PropTypes.string,\n};\n\nexport default Terminal;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { SocketContext } from './socket';\n\nconst useStyles = makeStyles((theme) => ({\n  listRoot: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n  },\n  formRoot: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst ProjectManager = ({ handleProjectNameSelection }) => {\n  console.group('ProjectManager');\n  const socket = useContext(SocketContext);\n  const [files, setFiles] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const handleListItemClick = (event, file) => {\n    console.group('handleListItemClick');\n    console.log({ file });\n    console.groupEnd();\n    handleProjectNameSelection(file);\n    setSelectedIndex(null);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Client has connected to the server!');\n    });\n    console.log('emit getFiles');\n    socket.emit('getFiles');\n    socket.on('files', (data) => {\n      console.group('on files');\n      console.log({ data });\n      console.groupEnd();\n      setFiles(data);\n    });\n  }, [socket]);\n\n  let fileList = null;\n  if (files !== null) {\n    fileList = files.map((file, index) => (\n      <ListItem\n        button\n        key={file}\n        selected={selectedIndex === index}\n        onClick={(event) => handleListItemClick(event, file)}\n      >\n        <ListItemIcon>\n          <DescriptionIcon />\n        </ListItemIcon>\n        <ListItemText primary={file} />\n      </ListItem>\n    ));\n  }\n  console.groupEnd();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <div className={classes.listRoot}>\n            {fileList === null ? (\n              <CircularProgress />\n            ) : (\n              <List\n                component=\"nav\"\n                aria-label=\"project files\"\n                subheader={\n                  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Saved Projects\n                  </ListSubheader>\n                }\n              >\n                {fileList}\n              </List>\n            )}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <form className={classes.formRoot} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"New Project Name\"\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={inputValue.trim().length === 0 || fileList === null}\n              onClick={() => {\n                const projectName = `${inputValue.trim()}.xml`;\n                handleProjectNameSelection(projectName);\n                setInputValue('');\n              }}\n            >\n              Create New Project\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProjectManager.propTypes = {\n  handleProjectNameSelection: PropTypes.func.isRequired,\n};\n\nexport default ProjectManager;\n","/* eslint-disable import/newline-after-import, import/first, import/order */\nimport './App.css';\nimport './customBlocks/custom_Blocks';\nimport './customBlocks/required/board_setup_blocks';\nimport './customBlocks/led/led';\nimport './customBlocks/button/button';\nimport './customBlocks/pins/pins';\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport BlocklyToolbox from './BlocklyToolbox';\nimport Terminal from './Terminal';\nimport ProjectManager from './ProjectManager';\n\nimport { SocketContext, socket } from './socket';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {children}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst initialXml =\n  '<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"board_setup\" id=\"{`$}^q8GM8vjCjK?)f5u\" x=\"90\" y=\"30\"></block></xml>';\n\nconst App = () => {\n  console.group('App');\n  const [toolboxState, setToolboxState] = useState({\n    code: '',\n    xml: initialXml,\n  });\n  const [tabValue, setTabValue] = useState(0);\n  const [projectName, setProjectName] = useState(null);\n\n  const [isProjectRunning, setIsProjectRunning] = useState(false);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleProjectNameSelection = useCallback((projectNameToUpdate) => {\n    setProjectName(projectNameToUpdate);\n  }, []);\n\n  const handleToolboxChange = useCallback(\n    ({ xml, code }) => {\n      setToolboxState({ xml, code });\n      if (projectName !== null) {\n        console.group('handleToolboxChange');\n        console.log({ xml, projectName });\n        console.groupEnd();\n        socket.emit('saveFile', { contents: xml, fileName: projectName });\n      }\n    },\n    [projectName]\n  );\n\n  useEffect(() => {\n    if (projectName !== null) {\n      console.group('getFile Effect');\n      console.log({ projectName });\n      console.groupEnd();\n      socket.emit('getFile', { fileName: projectName });\n    }\n  }, [projectName]);\n\n  useEffect(() => {\n    socket.on('file', (file) => {\n      console.group('on file');\n      if (file === '') {\n        console.log('blank file');\n        setToolboxState({ code: '', xml: initialXml });\n      } else {\n        const buf = String.fromCharCode.apply(null, new Uint8Array(file));\n        console.log({ buf });\n        setToolboxState({ code: '', xml: buf });\n      }\n      setTabValue(1);\n      console.groupEnd();\n    });\n\n    socket.on('projectStatus', (status) => {\n      console.group('on projectStatus');\n      console.log({ status });\n      setIsProjectRunning(status);\n      console.groupEnd();\n    });\n  }, []);\n\n  console.groupEnd();\n  return (\n    <SocketContext.Provider value={socket}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          aria-label=\"Blockly Tabs\"\n        >\n          <Tab label=\"Projects\" disabled={isProjectRunning} />\n          <Tab\n            label=\"Blockly\"\n            disabled={projectName === null || isProjectRunning}\n          />\n          <Tab\n            label=\"Code\"\n            disabled={projectName === null || isProjectRunning}\n          />\n          <Tab\n            label=\"XML\"\n            disabled={projectName === null || isProjectRunning}\n          />\n          <Tab label=\"Run\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0}>\n        <ProjectManager\n          handleProjectNameSelection={handleProjectNameSelection}\n        />\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        {tabValue === 1 && (\n          <BlocklyToolbox\n            toolboxState={toolboxState}\n            handleToolboxChange={handleToolboxChange}\n          />\n        )}\n      </TabPanel>\n      <TabPanel value={tabValue} index={2}>\n        <pre>{toolboxState.code}</pre>\n      </TabPanel>\n      <TabPanel value={tabValue} index={3}>\n        <pre id=\"generated-xml\">{toolboxState.xml}</pre>\n      </TabPanel>\n      <TabPanel value={tabValue} index={4}>\n        <Terminal\n          isProjectRunning={isProjectRunning}\n          projectCode={toolboxState.code}\n          projectName={projectName}\n        />\n      </TabPanel>\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}